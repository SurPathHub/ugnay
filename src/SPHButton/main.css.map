{"version":3,"sourceRoot":"","sources":["SPHButton/main.scss","SPHButton/_sph-button.scss","SPHCore/Elevation/_elevation.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AC4DI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EChBJ,YAFS;;ADsBL;EACI;;AAGJ;EACI;EACA;;AAGJ;EACI;;AAGJ;EAEI;EACA;;AAEA;EACI;;AAIR;EACI;;AAGJ;EACI;EACA;;AAGJ;EACI;EACA;EACA;;AASR;EACI;EACA;;AAEA;EAEI;;AAGJ;EACI;EACA;;AAGJ;EAEI;EACA;EACA;;AAEA;EAEI;;AAGJ;EACI;;AAOZ;EACI;EACA;EACA;;AAOA;EACI;EACA;;AAIJ;EAEI;EACA;EACA;EACA;;AAEA;EACI;EACA","file":"SPHButton/main.css","sourcesContent":["/*\r\n// Copyright (c) 2021 SurPath Hub\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n*/\r\n\r\n@use 'sph-button' as c;\r\n\r\n@include c.use();\r\n","//\r\n// Copyright (c) 2021 SurPath Hub\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n//\r\n\r\n@use 'sass:list';\r\n\r\n@use '../SPHCore/Typography';\r\n@use '../SPHCore/Theme';\r\n@use '../SPHCore/Elevation';\r\n\r\n$button-fill: var(--sph-theme--secondary) !default;\r\n$button-active-fill: var(--sph-theme--secondary-light) !default;\r\n$button-disabled-fill: var(--sph-theme--secondary-dark) !default;\r\n\r\n$button-size: 14px !default;\r\n$button-icon-size: 18px !default;\r\n\r\n$button-ink: var(--sph-theme--on-secondary) !default;\r\n$button-icon-ink: inherit !default;\r\n\r\n$button-label-weight: 700 !default;\r\n\r\n$button-radius: 0.3rem !default;\r\n$button-elevation-color: #000000 !default;\r\n\r\n@mixin use($types: 'all') {\r\n    \r\n    @include sph-button-base {\r\n        \r\n        @if list.index($types, 'outlined') or list.index($types, 'all') {\r\n            @include _sph-button-outlined;\r\n        }\r\n        \r\n        @if list.index($types, 'filled') or list.index($types, 'all') {\r\n            @include _sph-button-filled;\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n@mixin sph-button-base {\r\n    .sph-button {\r\n        display: inline-flex;\r\n        flex-flow: row nowrap;\r\n        align-items: center;\r\n        padding: 0.5rem 0.7rem;\r\n        border-radius: Theme.key-create('button-radius', $button-radius);\r\n        border: 1px solid rgba(0 0 0 / 0);\r\n        background: rgba(0 0 0 / 0);\r\n        color: Theme.key-create('button-fill', $button-fill);\r\n        cursor: pointer;\r\n        user-select: none;\r\n        transition: all 0.1s ease;\r\n        outline: none;\r\n        \r\n        @include Elevation.apply(0, $button-elevation-color);\r\n        \r\n        &:hover {\r\n            background-color: rgba(#fff, 10%);\r\n        }\r\n        \r\n        &:focus {\r\n            border-color: rgba(#c4c4c4, 50%);\r\n            background-color: rgba(#fff, 12.5%);\r\n        }\r\n        \r\n        &:active {\r\n            color: Theme.key-create('button-active-fill', $button-active-fill);\r\n        }\r\n        \r\n        &:disabled,\r\n        &--disabled {\r\n            color: Theme.key-create('button-disabled-fill', $button-disabled-fill) !important;\r\n            cursor: default;\r\n            \r\n            &:hover {\r\n                background: rgba(0 0 0 / 0);\r\n            }\r\n        }\r\n        \r\n        > * + * {\r\n            margin-left: 5px;\r\n        }\r\n        \r\n        .sph-button__icon {\r\n            color: Theme.key-create('button-icon-ink', $button-icon-ink);\r\n            font-size: Theme.key-create('button-icon-size', Typography.px-to-rem($button-icon-size));\r\n        }\r\n        \r\n        .sph-button__label {\r\n            color: Theme.key-create('button-ink', inherit);\r\n            font-weight: Theme.key-create('button-label-weight', $button-label-weight);\r\n            font-size: Theme.key-create('button-size', Typography.px-to-rem($button-size));\r\n        }\r\n        \r\n        @content;\r\n        \r\n    }\r\n}\r\n\r\n@mixin _sph-button-outlined {\r\n    &.sph-button--outlined {\r\n        border-color: #535353;\r\n        color: Theme.key-create('button-fill', $button-fill);\r\n        \r\n        &:hover,\r\n        &:focus {\r\n            border-color: Theme.key-create('button-fill', $button-fill);\r\n        }\r\n        \r\n        &:active {\r\n            border-color: Theme.key-create('button-active-fill', $button-active-fill);\r\n            color: Theme.key-create('button-active-fill', $button-active-fill);\r\n        }\r\n        \r\n        &:disabled,\r\n        &--disabled {\r\n            border-color: #363636;\r\n            cursor: default;\r\n            color: Theme.key-create('button-disabled-fill', $button-disabled-fill) !important;\r\n            \r\n            &:hover,\r\n            &:focus {\r\n                border-color: #363636;\r\n            }\r\n    \r\n            &:active {\r\n                border-color: #363636;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin _sph-button-filled {\r\n    &.sph-button--filled {\r\n        border-color: Theme.key-create('button-fill', $button-fill);\r\n        background-color: Theme.key-create('button-fill', $button-fill);\r\n        color: Theme.key-create('button-ink', $button-ink) !important;\r\n        \r\n        &:hover,\r\n        &:focus {\r\n            // @include Elevation.apply(2, $button-elevation-color);\r\n        }\r\n        \r\n        &:active {\r\n            background-color: Theme.key-create('button-active-fill', $button-active-fill);\r\n            border-color: Theme.key-create('button-active-fill', $button-active-fill);\r\n            // @include Elevation.apply(4, $button-elevation-color);\r\n        }\r\n        \r\n        &:disabled,\r\n        &--disabled {\r\n            color: Theme.key-create('button-ink', $button-ink) !important;\r\n            background-color: Theme.key-create('button-disabled-fill', $button-disabled-fill) !important;\r\n            border-color: Theme.key-create('button-disabled-fill', $button-disabled-fill) !important;\r\n            cursor: default;\r\n            \r\n            &:hover {\r\n                background: Theme.key-create('button-disabled-fill', $button-disabled-fill);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n    }\r\n}\r\n","//\r\n// Copyright (c) 2021 SurPath Hub\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n//\r\n\r\n@use 'sass:map';\r\n@use 'sass:meta';\r\n@use 'sass:math';\r\n\r\n@use 'elevation-variables' as ev;\r\n\r\n@mixin apply($level, $color: #000, $opacity-boost: 0) {\r\n\r\n    $_umbra-opacity: 0.2 !default;\r\n    $_penumbra-opacity: 0.14 !default;\r\n    $_ambient-opacity: 0.12 !default;\r\n\r\n    @if meta.type-of($level) != number or not math.is-unitless($level) {\r\n        @error \"Got '#{$level}'. $level must be a unitless number\";\r\n    }\r\n\r\n    @if $level < 0 or $level > 24 {\r\n        @error \"Got '#{$level}'. $level must be between 0 and 24\";\r\n    }\r\n\r\n    $_umbra: map.get(ev.$umbra-map, $level);\r\n    $_penumbra: map.get(ev.$penumbra-map, $level);\r\n    $_ambient: map.get(ev.$ambient-map, $level);\r\n\r\n    $_umbra-color: rgba($color, $_umbra-opacity + $opacity-boost);\r\n    $_penumbra-color: rgba($color, $_penumbra-opacity + $opacity-boost);\r\n    $_ambient-color: rgba($color, $_ambient-opacity + $opacity-boost);\r\n\r\n    $_umbra-value: #{'#{$_umbra} #{$_umbra-color}'};\r\n    $_penumbra-value: #{'#{$_penumbra} #{$_penumbra-color}'};\r\n    $_ambient-value: #{'#{$_ambient} #{$_ambient-color}'};\r\n\r\n    $_value: (#{$_umbra-value}, #{$_penumbra-value}, #{$_ambient-value});\r\n\r\n    box-shadow: $_value;\r\n\r\n}\r\n"]}