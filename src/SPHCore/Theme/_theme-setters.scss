//
// Copyright (c) 2021 SurPath Hub
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use 'sass:meta';

@use '../Color/color-getters' as Color;
@use 'theme-keys' as key;

$context: 'theme';

@mixin config(
    $primary,
    $secondary,
    $args...
) {
    $_primary-map: Color.get-split($primary);
    $_secondary-map: Color.get-split($secondary);
    
    @each $property, $value in $_primary-map {
        @if $property == 'default' {
            @include key.bind(#{$context}--primary, $value);
        } @else {
            @include key.bind(#{$context}--primary-#{$property}, $value);
        }
    }
    
    @each $property, $value in $_secondary-map {
        @if $property == 'default' {
            @include key.bind(#{$context}--secondary, $value);
        } @else {
            @include key.bind(#{$context}--secondary-#{$property}, $value);
        }
    }
    
    @include key.bind(#{$context}--on-primary, Color.get-ink($primary));
    @include key.bind(#{$context}--on-secondary, Color.get-ink($secondary));
    
    @each $property, $value in meta.keywords($args) {
        @include key.bind(#{$context}--#{$property}, $value);
    }
}
